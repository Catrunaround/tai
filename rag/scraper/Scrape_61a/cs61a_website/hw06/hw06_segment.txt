Parsed Headers, Levels and Contents:
h1: 
Contents:

Homework 6: OOP, Linked Lists

 * [hw06.zip](hw06.zip "hw06.zip")

*Due by 11:59pm on Thursday, March 14*


=====================================

h2: Instructions
Contents:

Download [hw06.zip](hw06.zip "hw06.zip"). Inside the archive, you will find a file called
[hw06.py](hw06.py "hw06.py"), along with a copy of the `ok` autograder.

**Submission:** When you are done, submit the assignment by uploading all code files you've edited to Gradescope. You may submit more than once before the deadline; only the
final submission will be scored. Check that you have successfully submitted
your code on Gradescope. See [Lab 0](/lab/lab00#task-c-submitting-the-assignment "/lab/lab00#task-c-submitting-the-assignment") for more instructions on
submitting assignments.

**Using Ok:** If you have any questions about using Ok, please
refer to [this guide.](/articles/using-ok "/articles/using-ok")
**Grading:** Homework is graded based on
correctness. Each incorrect problem will decrease the total score by one point.
**This homework is out of 2 points.**

=====================================

h1: Required Questions
Contents:

 Getting Started Videos (enable JavaScript)


=====================================

h2: Getting Started Videos
Contents:

These videos may provide some helpful direction for tackling the coding
problems on this assignment.

> To see these videos, you should be logged into your berkeley.edu email.
> 
> 

 [YouTube link](https://youtu.be/playlist?list=PLx38hZJ5RLZcStdG8HQmwFTAo0VLra9IM "https://youtu.be/playlist?list=PLx38hZJ5RLZcStdG8HQmwFTAo0VLra9IM") 


=====================================

h2: Midsemester Survey
Contents:


=====================================

h3: Q1: Mid-Semester Feedback
Contents:

As part of this homework, fill out the
[Mid-Semester Feedback](https://forms.gle/HPegZMaadytQg9NX6 "https://forms.gle/HPegZMaadytQg9NX6") form.

> **Confidentiality**:
> Your responses to the survey are confidential, and only the instructors
> will be able to see this data unanonymized.
> More specifics on confidentiality can be found on the survey itself.
> 
> 

Once you finish the survey, you will be presented with a passphrase (if you miss
it, it should also be at the bottom of the confirmation email you receive). Put
this passphrase, as a string, on the line that says
`passphrase = '*** PASSPHRASE HERE ***'` in the Python file for this assignment.

Use Ok to test your code:

```
python3 ok -q midsem_surveyCopy✂️
```

 document.getElementById("copy-code-python3ok-qmidsem\_survey").onclick = () => copyCode('python3 ok -q midsem\_survey', "copy-code-python3ok-qmidsem\_survey");


=====================================

h2: OOP
Contents:


=====================================

h3: Q2: Vending Machine
Contents:

In this question you'll create a [vending machine](https://en.wikipedia.org/wiki/Vending_machine "https://en.wikipedia.org/wiki/Vending_machine") that sells a single product and provides change when needed.

Create a class called `VendingMachine` that represents a vending
machine for some product. A `VendingMachine` object returns strings
describing its interactions. Make sure your output *exactly* matches the strings in the doctests including punctuation and spacing!

> You may find Python's formatted string literals, or [f-strings](https://docs.python.org/3/tutorial/inputoutput.html#fancier-output-formatting "https://docs.python.org/3/tutorial/inputoutput.html#fancier-output-formatting") useful.
> A quick example:
> 
> 
> 
> 
```
> >>> feeling = 'love'
> >>> course = '61A!'
> >>> f'I {feeling} {course}'
> 'I love 61A!'
> 
```
> 

Fill in the `VendingMachine` class, *adding attributes and methods as appropriate*, such that its behavior matches the following doctests:

```
class VendingMachine:
    """A vending machine that vends some product for some price.

    >>> v = VendingMachine('candy', 10)
    >>> v.vend()
    'Nothing left to vend. Please restock.'
    >>> v.add_funds(15)
    'Nothing left to vend. Please restock. Here is your $15.'
    >>> v.restock(2)
    'Current candy stock: 2'
    >>> v.vend()
    'Please add $10 more funds.'
    >>> v.add_funds(7)
    'Current balance: $7'
    >>> v.vend()
    'Please add $3 more funds.'
    >>> v.add_funds(5)
    'Current balance: $12'
    >>> v.vend()
    'Here is your candy and $2 change.'
    >>> v.add_funds(10)
    'Current balance: $10'
    >>> v.vend()
    'Here is your candy.'
    >>> v.add_funds(15)
    'Nothing left to vend. Please restock. Here is your $15.'

    >>> w = VendingMachine('soda', 2)
    >>> w.restock(3)
    'Current soda stock: 3'
    >>> w.restock(3)
    'Current soda stock: 6'
    >>> w.add_funds(2)
    'Current balance: $2'
    >>> w.vend()
    'Here is your soda.'
    """
    "*** YOUR CODE HERE ***"

```

Use Ok to test your code:

```
python3 ok -q VendingMachineCopy✂️
```

 document.getElementById("copy-code-python3ok-qVendingMachine").onclick = () => copyCode('python3 ok -q VendingMachine', "copy-code-python3ok-qVendingMachine");


=====================================

